name: Android

on:
  push:
    tags:
      - '*debug'

jobs:
  build:
    environment: sunbird
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'zulu'
        cache: gradle
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    
    - name: Install specific platform and build tools
      run: |
        echo "y" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-35" 
        echo "y" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install "build-tools;34.0.0"
        echo "y" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Check Android SDK versions
      run: |
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "Available Android platforms:"
        ls -la $ANDROID_SDK_ROOT/platforms/
        echo "Available build tools:"
        ls -la $ANDROID_SDK_ROOT/build-tools/

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 22.x

    - name: Install Ionic
      run: npm install -g @ionic/cli

    - name: Install app dependencies
      run: npm install --legacy-peer-deps

    - name: Upload App Icon
      run: node scripts/uploadAppIcon.js

    - name: Generate App Assets
      run: npx @capacitor/assets generate --iconBackgroundColor '#ffffff' --iconBackgroundColorDark '#222222' --splashBackgroundColor '#ffffff' --splashBackgroundColorDark '#111111'

    - name: Convert Windows line endings to Linux from the gradlew file
      run: sudo apt update && sudo apt install dos2unix && cd android && dos2unix ./gradlew && cd ..

    - name: Make ./gradlew command executable
      run: cd android && chmod +x ./gradlew && cd ..
    
    - name: Decode google-service
      id: decode_google-service
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'google-services.json'
        fileDir: '/home/runner/work/SunbirdEd-mobile-app/SunbirdEd-mobile-app/configurations/'
        encodedString: ${{ secrets.GOOGLE_SERVICE_CONTENT }}

    - name: Replace secrets in gradle.properties
      run: |
        sed -i 's|^base_url=.*|base_url=${{ vars.BASE_URL }}|' android/gradle.properties
        sed -i 's|^channel_id=.*|channel_id=${{ vars.CHANNEL_ID }}|' android/gradle.properties
        sed -i 's|^mobile_app_key=.*|mobile_app_key=${{ secrets.MOBILE_APP_KEY }}|' android/gradle.properties
        sed -i 's|^mobile_app_secret=.*|mobile_app_secret=${{ secrets.MOBILE_APP_SECRET }}|' android/gradle.properties
    
    - name: Decode Keystore
      id: decode_keystore
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'android_keystore.jks'
        fileDir: '/home/runner/work/SunbirdEd-mobile-app/SunbirdEd-mobile-app/android/app/keystore/'
        encodedString: ${{ secrets.KEYSTORE }}
    
    - name: Create signing.properties from JSON secret
      run: |
        mkdir -p ${{ github.workspace }}/android/app/keystore

        # Decode the JSON secret into a file
        echo "${{ secrets.DEBUG_APK_SIGNING_KEYS }}" | base64 --decode > signing.json

        # Extract values using jq
        KEYSTORE_PASSWORD=$(jq -r '.DEBUG_SIGNING_STORE_PASSWORD' signing.json)
        KEYSTORE_ALIAS=$(jq -r '.DEBUG_SIGNING_KEY_ALIAS' signing.json)
        KEYSTORE_ALIAS_PASSWORD=$(jq -r '.DEBUG_SIGNING_KEY_PASSWORD' signing.json)

        # Write to signing.properties
        cat <<EOF > ${{ github.workspace }}/android/signing.properties
        KEYSTORE_FILE=${{ github.workspace }}/android/app/keystore/android_keystore.jks
        KEYSTORE_PASSWORD=$KEYSTORE_PASSWORD
        KEYSTORE_ALIAS=$KEYSTORE_ALIAS
        KEYSTORE_ALIAS_PASSWORD=$KEYSTORE_ALIAS_PASSWORD
        EOF


    - name: Build Ionic assets
      run: ionic build --prod

    - name: Capacitor Sync
      run: npx cap sync android

    - name: Copy and update android
      run: npx cap copy android && npx cap update android

    - name: Copy content-player files to Android assets
      run: |
        if [ ! -d "www/content-player" ]; then
          echo "Source directory www/content-player does not exist!"
          exit 1
        fi
        mkdir -p android/app/src/main/assets/public/content-player
        cp -r www/content-player/* android/app/src/main/assets/public/content-player/
        ls -R android/app/src/main/assets/public/content-player

    - name: Decode and export signing config
      id: signing
      run: |
        # Decode the base64 JSON into a file
        echo "${{ secrets.DEBUG_APK_SIGNING_KEYS }}" | base64 --decode > signing.json

        # Extract each value with jq and export them
        echo "SIGNING_KEY_ALIAS=$(jq -r '.DEBUG_SIGNING_KEY_ALIAS' signing.json)" >> $GITHUB_ENV
        echo "SIGNING_KEY_PASSWORD=$(jq -r '.DEBUG_SIGNING_KEY_PASSWORD' signing.json)" >> $GITHUB_ENV
        echo "SIGNING_STORE_PASSWORD=$(jq -r '.DEBUG_SIGNING_STORE_PASSWORD' signing.json)" >> $GITHUB_ENV


    - name: Build debug APK
      run: cd android && ./gradlew assembleDebug -PenforceReleaseSigningForDebug=true

    - name: Upload Debug APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: android/app/build/outputs/